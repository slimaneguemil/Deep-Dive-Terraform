pipeline {
    agent any
    tools {
        "org.jenkinsci.plugins.terraform.TerraformInstallation" "terraform-0.12.17"
    }
    parameters {
        string(name: 'LAMBDA_URL', defaultValue: '', description: 'URL to the Lamdba function')
        string(name: 'WORKSPACE', defaultValue: 'development', description:'worspace to use in Terraform')
    }
    environment {
        TF_HOME = tool('terraform-0.12.17')
        TF_IN_AUTOMATION = "true"
        PATH = "$TF_HOME:$PATH"
        DYNAMODB_STATELOCK = "terraform-slim-tfstatelock"
        NETWORKING_BUCKET = "terraform-slim-networking"
        NETWORKING_ACCESS_KEY = credentials('networking_access_key')
        NETWORKING_SECRET_KEY = credentials('networking_secret_key')
    }
    stages {
        stage('NetworkInit'){
            steps {
                dir('module5/networking/'){
                     sh "id"
                      sh 'terraform --version'
                      sh "terraform init -input=false -plugin-dir=/var/jenkins_home/terraform_plugins \
                       --backend-config='dynamodb_table=$DYNAMODB_STATELOCK' --backend-config='bucket=$NETWORKING_BUCKET' \
                       --backend-config='access_key=$NETWORKING_ACCESS_KEY' --backend-config='secret_key=$NETWORKING_SECRET_KEY'"

                }
            }
        }

        stage('NetworkPlan'){
                steps {
                    dir('module5/networking/'){
                        script {
                            try {
                               sh "terraform workspace new ${params.WORKSPACE}"
                            } catch (err) {
                                sh "terraform workspace select ${params.WORKSPACE}"
                            }
                            sh "terraform plan -var 'aws_access_key=$NETWORKING_ACCESS_KEY' -var 'aws_secret_key=$NETWORKING_SECRET_KEY' \
                            -var 'url=${params.LAMBDA_URL}' -out terraform-networking.tfplan;echo \$? > status"
                            stash name: "terraform-networking-plan", includes: "terraform-networking.tfplan"
                        }
                    }
                }
            }

    }


}