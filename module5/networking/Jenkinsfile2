pipeline {
    agent any
    tools {
        "org.jenkinsci.plugins.terraform.TerraformInstallation" "terraform-0.12.17"
    }
    parameters {
        string(name: 'LAMBDA_URL', defaultValue: '', description: 'URL to the Lamdba function')
        string(name: 'WORKSPACE', defaultValue: 'development', description:'worspace to use in Terraform')
    }
    environment {
        TF_HOME = tool('terraform-0.12.17')
        TF_IN_AUTOMATION = "true"
        PATH = "$TF_HOME:$PATH"
        DYNAMODB_STATELOCK = "terraform-slim-tfstatelock"
        NETWORKING_BUCKET = "terraform-slim-networking"
        NETWORKING_ACCESS_KEY = credentials('networking_access_key')
        NETWORKING_SECRET_KEY = credentials('networking_secret_key')
    }
    stages {
        stage('NetworkInit'){
            steps {
                dir('module5/networking/'){
                     sh "$PWD"
                     sh "ls -la"
                     sh "terraform init -input=false -plugin-dir=/var/jenkins_home/terraform_plugins \
                                         --backend-config='dynamodb_table=$DYNAMODB_STATELOCK' --backend-config='bucket=$NETWORKING_BUCKET' \
                                         --backend-config='access_key=$NETWORKING_ACCESS_KEY' --backend-config='secret_key=$NETWORKING_SECRET_KEY'"
                    sh 'terraform --version'
                    sh "whoami"
                }
            }
        }
    }
    post {
            always {
                echo 'One way or another, I have finished'
                deleteDir() /* clean up our workspace */
            }
            success {
                echo 'I succeeeded!'
            }
            unstable {
                echo 'I am unstable :/'
            }
            failure {
                echo 'I failed :('
            }
            changed {
                echo 'Things were different before...'
            }
        }

}